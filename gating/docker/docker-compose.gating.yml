version: '3.8'

services:
  # Permit.io Policy Decision Point (PDP)
  permit-pdp:
    image: permitio/pdp-v2:latest
    container_name: permit-pdp
    ports:
      - "7766:7000"
      - "7001:7001"
    environment:
      - PDP_API_KEY=${PERMIT_API_KEY}
      - PDP_DEBUG=true
      - PDP_LOG_LEVEL=DEBUG
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:7766/healthy"]
      interval: 15s
      timeout: 10s
      retries: 8
      start_period: 60s
    networks:
      - gating-network
    restart: unless-stopped

  # OPAL Server (for custom data fetchers)
  opal-server:
    image: permitio/opal-server:latest
    container_name: opal-server
    ports:
      - "7002:7002"
    environment:
      - OPAL_LOG_LEVEL=DEBUG
      - OPAL_BROADCAST_URI=redis://redis:6379
      - OPAL_POLICY_REPO_URL=${OPAL_POLICY_REPO_URL:-}
      - OPAL_POLICY_REPO_POLLING_INTERVAL=30
      - OPAL_DATA_UPDATER_ENABLED=false
    depends_on:
      - redis
    networks:
      - gating-network
    restart: unless-stopped

  # Redis for OPAL pub/sub
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - gating-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Custom OPAL Data Fetcher for Snyk
  opal-fetcher:
    build:
      context: ../opal-fetcher
      dockerfile: Dockerfile
    container_name: opal-fetcher
    ports:
      - "8000:8000"
    environment:
      - SNYK_TOKEN=${SNYK_TOKEN}
      - SNYK_ORG_ID=${SNYK_ORG_ID}
      - SNYK_PROJECT_ID=${SNYK_PROJECT_ID}
      - LOG_LEVEL=DEBUG
    networks:
      - gating-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  gating-network:
    driver: bridge
    name: gating-network

volumes:
  maven-cache:
    name: maven-cache